
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('com.ofg:uptodate-gradle-plugin:0.0.5')
    }
}

Boolean doSigning() {
    signingEnabled.trim() == "true"
}

allprojects {
	defaultTasks 'build'
}

subprojects {

	apply plugin: "groovy"
	apply plugin: "java"
	apply plugin: "maven"
    apply plugin: "uptodate"

    ext {
        snap = "-SNAPSHOT"
        isSnapshot = false
        baseVersion = "0.6"
    }

	version = "$baseVersion${isSnapshot ? snap : ""}".toString()

	ext {
        consumeVersion = "0.6"

		sonatypeBaseUrl = "https://oss.sonatype.org"
		sonatypeSnapshotUrl = "$sonatypeBaseUrl/content/repositories/snapshots/"
        sonatypeRepositoryUrl = "$sonatypeBaseUrl/content/groups/public"
		sonatypeReleaseUrl = "$sonatypeBaseUrl/service/local/staging/deploy/maven2/"
        sonatypeUploadUrl = isSnapshot ? sonatypeSnapshotUrl : sonatypeReleaseUrl

		projectUrl = "https://github.com/mperry/functionalgroovy"
		projectName = "functionalgroovy"
		pomProjectName = "FunctionalGroovy"
		baseJarName = "$projectName-$name"

		groupName = "com.github.mperry"
		scmGitFile = "scm:git@github.com:mperry/functionalgroovy.git"
		projectDescription = "FunctionalGroovy enhances FunctionalJava for Groovy"

		founder = "Mark Perry"
		founderUsername = "mperry"
		organisation = groupName
        groovyVersion = "2.3.8"
        fjVersion = "4.2-beta-2-SNAPSHOT"

		gradleGroovy = "org.codehaus.groovy:groovy-all:$groovyVersion"
        gradleFj = "org.functionaljava:functionaljava:$fjVersion"
		gradleJunit = "junit:junit:4.11"

	}

    sourceCompatibility = "1.7"

    archivesBaseName = baseJarName
    group = project.groupName

	repositories {
		mavenCentral()
        maven {
            url sonatypeRepositoryUrl
        }
	}

	jar {
		manifest {
			attributes 'Created-By': project.founder, 'Signature-Version': project.version
		}
	}

	task groovydocJar(type: Jar, dependsOn: groovydoc) {
		classifier = 'javadoc'
		from 'build/docs/groovydoc'
	}

	task sourcesJar(type: Jar) {
		from sourceSets.main.allSource
		classifier = 'sources'
	}

	artifacts {
		archives jar
		archives groovydocJar
		archives sourcesJar
	}

    if (doSigning()) {
        apply plugin: "signing"
        signing {
            sign configurations.archives
        }
    }

    uploadArchives.enabled = false
	uploadArchives {
		repositories {
			mavenDeployer {
                if (doSigning()) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

				repository(url: sonatypeUploadUrl) {
					authentication(userName: sonatypeUsername, password: sonatypePassword)
				}
				pom {
					groupId = project.groupName
					project {
						name pomProjectName
						packaging 'jar'
						description projectDescription
						url projectUrl

						scm {
							url "${projectUrl}.git"
							connection scmGitFile
							developerConnection scmGitFile
						}

						licenses {
							license {
								name 'The Apache Software License, Version 2.0'
								url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
								distribution 'repo'
							}
						}

						developers {
							developer {
								id project.founderUsername
								name project.founder
							}
						}
					}

				}

			}
		}
	}

}
